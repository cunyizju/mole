// Originated from OOFEM (https://github.com/oofem/oofem)
// License: GNU Lesser General Public
// Modified by CY Li

#ifndef USERDEFDIRICHLETBC_H_
#define USERDEFDIRICHLETBC_H_

#include "bc/boundarycondition.h"

#define _IFT_UserDefDirichletBC_Name "userdefdirichletbc"
#define _IFT_UserDefDirichletBC_filename "filename"

// forward declare PyObject
// as suggested on the python mailing list
// http://mail.python.org/pipermail/python-dev/2003-August/037601.html
#ifndef PyObject_HEAD
struct _object;
typedef _object PyObject;
#endif

//class PyObject;

/**
 * Class representing user defined Dirichlet boundary conditions. The boundary
 * condition is specified in a Python function with the syntax
 * @code{.py}
 * def giveUserDefBC(coord, iDofNum, time):
 * @endcode
 * where coord is the node coordinate, iDofNum is the dof number, i.e. 1 for D_u, 2 D_v and so on.
 * The time argument is the target time (the time at the end of the time step).
 *
 * The Python function should return the prescribed value in the node.
 *
 * When the boundary condition is created in the input file, the
 * file name of the Python function needs to be specified under
 * the filename keyword. Use lower case letters in the file name!
 *
 * Status: experimental.
 *
 * @date Aug 7, 2013
 * @author Erik Svenning
 */
namespace oofem {

class OOFEM_EXPORT UserDefDirichletBC : public BoundaryCondition
{
protected:
    /// Prescribed values for each resp. dof
    FloatArray values;

    PyObject *mpModule;
    PyObject *mpFunc;

    std :: string mFileName;

public:
    /**
     * Constructor. Creates boundary condition with given number, belonging to given domain.
     * @param i Boundary condition number.
     * @param d Domain to which new object will belongs.
     */
    UserDefDirichletBC(int i, Domain * d);

    /// Destructor
    virtual ~UserDefDirichletBC();

    double give(Dof *dof, ValueModeType mode, double time) override;

    bcType giveType() const override { return DirichletBT; }
    void initializeFrom(InputRecord &ir) override;
    void giveInputRecord(DynamicInputRecord &input) override;
    void scale(double s) override;
    const char *giveClassName() const override { return "UserDefDirichletBC"; }
    const char *giveInputRecordName() const override { return _IFT_UserDefDirichletBC_Name; }
};
} // end namespace oofem

#endif /* USERDEFDIRICHLETBC_H_ */
